#plot_individual_projects.R
library(tidyverse)
library(pheatmap)
library(DESeq2)
source('figurePlotting/rna_functions.R')
# READ IN THE DATA FROM DESEQ ---------------------------------------------
#gather the individual files
iFileList = list.files(path = 'deseqResults/individual_projects/', pattern = '*deseqResults.Rdata', full.names=TRUE)
inames = sub('_deseqResults.Rdata', '', list.files(path = 'deseqResults/individual_projects/', pattern = '*deseqResults.Rdata', full.names=FALSE))
names(iFileList)=inames
#gather grouped files
gFileList = list.files(path = 'deseqResults', pattern = '*deseqResults.Rdata', full.names=TRUE)
gnames0 = sub('_deseqResults.Rdata', '', list.files(path = 'deseqResults/', pattern = '*deseqResults.Rdata', full.names=FALSE))
names(gFileList)=gnames0
toRemove = c('bleached', 'cold_NoBEWW', 'filteredImmune', 'heat_NoBEWW', 'salinity_NoBEWW')
gnames = gnames0[!gnames0 %in% toRemove]
gFileList = gFileList[gnames]
length(gFileList)
names(gFileList)
#read in the files for individual studies
idfList = list()
for (i in 1:length(iFileList)){
x=iFileList[[i]]
load(x)
n=inames[i]
idfList[[n]]=read_deseq_res(x,n)
}
#read in the stress desea results
gdfList = list()
for (i in 1:length(gFileList)){
x=gFileList[[i]]
load(x)
n=gnames[i]
gdfList[[n]]=read_deseq_res(x,n)
}
#combine them
cdfList = append(idfList, gdfList)
cdfList=idfList
#merge them
cdat = cdfList %>%
purrr::reduce(full_join, by = c('gene'))
rownames(cdat)=cdat$gene
ldat = cdat %>%
dplyr::select(grep('_lfc', colnames(cdat)))
colnames(ldat) = sub('_lfc', '', colnames(ldat))
#save write out the table
order = colnames(cdat)
order = order[order!='gene']
order = append(c('gene'), order)
idat = cdat[,order]
save(idat, file= 'deseqResults/all_by_bioproject.Rdata')
# ARRANAGE CORRELATION MATRIX ---------------------------------------------
#get correlations and modify names
noAllBeww = ldat %>%
dplyr::select(-j1_thisStudy_PRJNA559404)
c=cor(noAllBeww, use="pairwise.complete.obs")
colnames(c) %>%
write.table('./metadata/detailed_tables/stressNamesRaw.tsv', quote=FALSE, row.names=FALSE)
#manually fill in nicer names for plotting
modNames = read.table('./metadata/detailed_tables/stressNamesModified.txt',
sep='\t',
header=TRUE,
row.names='my_title',
stringsAsFactors=FALSE)
modNames=modNames[colnames(c),]
projName = paste(modNames$Bioproject, modNames$ref)
projTreat = paste(modNames$treat, modNames$Bioproject)
treat = modNames$treat
#----ARRANGE ANNOTATIONS FOR HEATMAP/CLUSTERING
#setup colors
library(RColorBrewer)
library(vegan)
COLOR = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(100) # display.brewer.all()
# COLOR = inferno(100)
#setup bleached projects
adat=read_csv('metadata/subset_tables/allStress_Coldata.csv')
bleachedProjs = adat %>%
filter(bleached=='yes' & !is.na(bleached)) %>%
pull(my_title) %>%
unique()
j1Exps = colnames(c)[grep('beww', colnames(c))]
bleachedProjs = append(bleachedProjs, j1Exps)
##### BUILD MATRIX WITH BLEACHING LABELS FOR HEATMAP
labels = colnames(c)
corWbleach = c[,"bewwMulti"]
rcorWbleach = 1-corWbleach
d <- as.dist(1-c)
h=hclust(d, method='average')
ho=reorder(h, rcorWbleach)
hmLabs = h$labels
blch = hmLabs %in% bleachedProjs
m=matrix(nrow=length(blch), ncol=length(blch))
for (i in 1:length(blch)){
for (j in 1:length(blch)){
r=blch[i] & blch[j]
m[i,j]=r
}
}
m[m==TRUE]<-'b'
m[m==FALSE]<-''
##### MAKE CALLS ON BIOPROJECT GROUPINGS
plot(h)
cut.height = 1
abline(h = cut.height, col = "red", lty = 2);
# Determine cluster under the line
library(WGCNA)
clust = cutreeStatic(h, cutHeight = cut.height, minSize = 4)
table(clust)
corStressProjs = rownames(c)[(clust==1)]
#look at minimum correlations within these groups
cStrong = c[corStressProjs,corStressProjs]
mean(cStrong)
min(cStrong)
#combine experiments from this study into one
corStressProjs = append(c('j1_thisStudy_PRJNA559404'),
corStressProjs[!grepl('^beww', corStressProjs)])
lowStressProjs = rownames(c)[(clust==2)]
save(corStressProjs, lowStressProjs, file='metadata/corStressProjs.Rdata')
#output coldata files for each group
cs = adat %>%
filter(my_title %in% corStressProjs)
corStressProjs %in% unique(cs$my_title)
cs %>%
write_csv('metadata/subset_tables/corStress_Coldata.csv')
ls = adat %>%
filter(my_title %in% lowStressProjs)
lowStressProjs %in% unique(ls$my_title)
ls %>%
write_csv('metadata/subset_tables/lowStress_Coldata.csv')
#look at minimum correlations within these groups
cStrong = c[rownames(c)[(clust==1)],rownames(c)[(clust==1)]]
strong0 = as.vector(cStrong)
strong = strong0[strong0 < 0.99999999999]
mean(strong)
min(strong)
cWeak = c[lowStressProjs, lowStressProjs]
weak0 = as.vector(cWeak)
weak = weak0[weak0 < 0.99999999999]
mean(weak)
min(weak)
#make annotaiton labels for heatmap (this didn't look as good but kept here just in case)
anots = data.frame(row.names=colnames(c),
cluster = if_else(colnames(c) %in% corStressProjs | grepl('^beww', colnames(c)),
'cluster A',
'cluster B'))
anots
cols=gg_color_hue(3)
controlColor = cols[1]
clusterAcol = COLOR[70]
clusterBcol = COLOR[30]
my_colour = list(cluster = c(`cluster A`=clusterAcol, `cluster B`=clusterBcol))
#format annotations for cluster and bleaching
blch = colnames(c) %in% bleachedProjs
blch[blch==TRUE]<-'True'
blch[blch==FALSE]<-'False'
clusterA = rownames(anots)[anots$cluster=='cluster A']
clusterB = rownames(anots)[anots$cluster=='cluster B']
bleachAnnot = data.frame(bleached = blch,
row.names=colnames(c),
stringsAsFactors=FALSE)
bleachAnnot$bleached[rownames(bleachAnnot)=='F_Uqueensland_ph_PRJNA269992']<-'mild'
bleachAnnot$bleached[bleachAnnot$bleached=='True']<-'yes'
bleachAnnot$bleached[bleachAnnot$bleached=='False']<-'no'
bleachAnnot$cluster<-NULL
my_colour = list(bleached = c(yes='white', no='coral3', mild = 'coral'),
cluster = c(`cluster A`=clusterAcol, `cluster B`=clusterBcol))
#check
bleachAnnot %>%
mutate(proj = colnames(c),
label=projName)
#plot
BREAKS=seq(-.1, 0.5, length.out=length(COLOR)+1)
pheatmap(c,
labels_row = treat,
labels_col=projName,
na_col=COLOR[100],
color=COLOR,
breaks=BREAKS,
cluster_rows = h,
cluster_cols = h,
fontsize_number = 10,
annotation_row = bleachAnnot,
annotation_col = anots,
annotation_colors = my_colour,
treeheight_row=25,
treeheight_col=0)
#plot_individual_projects.R
library(tidyverse)
library(pheatmap)
library(DESeq2)
source('figurePlotting/rna_functions.R')
# LOAD DNA METHYLATION DATA -----------------------------------------------
ll=load('figurePlotting/gbmLvl.Rdata')
ll
gbm.dat = gbm.dat %>%
mutate(logFracMeth = log(fracMeth, 2)) %>%
dplyr::select(name, logFracMeth, mbd.score, mrB) %>%
mutate(logFracMeth=if_else(abs(logFracMeth)==Inf,
NA,
))
lm1=lm(log2FoldChange~methLvl, data=na.omit(dat))
getwd()
